# encoding: utf-8

db_config = YAML.load_file('<%= fetch(:deploy_to) %>/shared/config/database.yml')["<%= fetch(:stage) %>"]

##
# Backup Generated: backup_db
# Once configured, you can run the backup with the following command:
#
# $ backup perform -t backup_db [-c <path_to_configuration_file>]
#
Backup::Model.new(:backup_db, 'Description for backup_db') do
  ##
  # Split [Splitter]
  #
  # Split the backup file in to chunks of 250 megabytes
  # if the backup file size exceeds 250 megabytes
  #
  split_into_chunks_of 250

  ##
  # PostgreSQL [Database]
  #
  database PostgreSQL do |db|
    db.name               = db_config["database"]
    db.username           = db_config["username"]
    db.password           = db_config["password"]
    db.host               = "localhost"
    db.port               = 5432
    # db.socket             = "/tmp/pg.sock"
    db.skip_tables        = []
    db.only_tables        = []
    db.additional_options = ["-xc", "-E=utf8"]
  end

  ##
  # Amazon Simple Storage Service [Storage]
  #
  # Available Regions:
  #
  #  - ap-northeast-1
  #  - ap-southeast-1
  #  - eu-west-1
  #  - us-east-1
  #  - us-west-1
  #
  store_with S3 do |s3|
    s3.access_key_id     = "<%= fetch(:backup_access_key_id) %>"
    s3.secret_access_key = "<%= fetch(:backup_secret_access_key) %>"
    s3.region            = "ap-northeast-1"
    s3.bucket            = "<%= fetch(:backup_bucket) %>"
    s3.path              = "/"
    s3.keep              = 10
  end

  encrypt_with GPG do |encryption|
    encryption.keys = {}
    encryption.keys['<%= fetch(:backup_gpg_email) %>'] = <<-KEY
<%= fetch(:backup_gpg_public_key) %>
    KEY
    encryption.recipients = '<%= fetch(:backup_gpg_email) %>'
  end

  notify_by HttpPost do |post|
    post.on_success = true
    post.on_warning = true
    post.on_failure = true

    # URI to post the notification to.
    # Port may be specified if needed.
    # If Basic Authentication is required, supply user:pass.
    post.uri = '<%= fetch(:backup_notify_url) %>'

    ##
    # Optional
    #
    # Additional headers to send.
    # post.headers = { 'Authentication' => 'my_auth_info' }
    #
    # Additional form params to post.
    post.params = <%= fetch(:backup_notify_params) %>

    # Successful response codes. Default: 200
    post.success_codes = [200, 201, 204]

    # Defaults to true on most systems.
    # Force with +true+, disable with +false+
    # post.ssl_verify_peer = false
    #
    # Supplied by default. Override with a custom 'cacert.pem' file.
    # post.ssl_ca_file = '/my/cacert.pem'
  end
end
